//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace SampleApp.Services {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.TempConvertSoap")]
    public interface TempConvertSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/CelsiusToFahrenheit", ReplyAction="*")]
        System.IAsyncResult BeginCelsiusToFahrenheit(SampleApp.Services.CelsiusToFahrenheitRequest request, System.AsyncCallback callback, object asyncState);
        
        SampleApp.Services.CelsiusToFahrenheitResponse EndCelsiusToFahrenheit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FahrenheitToCelsius", ReplyAction="*")]
        System.IAsyncResult BeginFahrenheitToCelsius(SampleApp.Services.FahrenheitToCelsiusRequest request, System.AsyncCallback callback, object asyncState);
        
        SampleApp.Services.FahrenheitToCelsiusResponse EndFahrenheitToCelsius(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CelsiusToFahrenheitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CelsiusToFahrenheit", Namespace="http://tempuri.org/", Order=0)]
        public SampleApp.Services.CelsiusToFahrenheitRequestBody Body;
        
        public CelsiusToFahrenheitRequest() {
        }
        
        public CelsiusToFahrenheitRequest(SampleApp.Services.CelsiusToFahrenheitRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CelsiusToFahrenheitRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string celsius;
        
        public CelsiusToFahrenheitRequestBody() {
        }
        
        public CelsiusToFahrenheitRequestBody(string celsius) {
            this.celsius = celsius;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CelsiusToFahrenheitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CelsiusToFahrenheitResponse", Namespace="http://tempuri.org/", Order=0)]
        public SampleApp.Services.CelsiusToFahrenheitResponseBody Body;
        
        public CelsiusToFahrenheitResponse() {
        }
        
        public CelsiusToFahrenheitResponse(SampleApp.Services.CelsiusToFahrenheitResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CelsiusToFahrenheitResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CelsiusToFahrenheitResult;
        
        public CelsiusToFahrenheitResponseBody() {
        }
        
        public CelsiusToFahrenheitResponseBody(string CelsiusToFahrenheitResult) {
            this.CelsiusToFahrenheitResult = CelsiusToFahrenheitResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FahrenheitToCelsiusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FahrenheitToCelsius", Namespace="http://tempuri.org/", Order=0)]
        public SampleApp.Services.FahrenheitToCelsiusRequestBody Body;
        
        public FahrenheitToCelsiusRequest() {
        }
        
        public FahrenheitToCelsiusRequest(SampleApp.Services.FahrenheitToCelsiusRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FahrenheitToCelsiusRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string fahrenheit;
        
        public FahrenheitToCelsiusRequestBody() {
        }
        
        public FahrenheitToCelsiusRequestBody(string fahrenheit) {
            this.fahrenheit = fahrenheit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FahrenheitToCelsiusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FahrenheitToCelsiusResponse", Namespace="http://tempuri.org/", Order=0)]
        public SampleApp.Services.FahrenheitToCelsiusResponseBody Body;
        
        public FahrenheitToCelsiusResponse() {
        }
        
        public FahrenheitToCelsiusResponse(SampleApp.Services.FahrenheitToCelsiusResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FahrenheitToCelsiusResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string FahrenheitToCelsiusResult;
        
        public FahrenheitToCelsiusResponseBody() {
        }
        
        public FahrenheitToCelsiusResponseBody(string FahrenheitToCelsiusResult) {
            this.FahrenheitToCelsiusResult = FahrenheitToCelsiusResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TempConvertSoapChannel : SampleApp.Services.TempConvertSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CelsiusToFahrenheitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CelsiusToFahrenheitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FahrenheitToCelsiusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FahrenheitToCelsiusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TempConvertSoapClient : System.ServiceModel.ClientBase<SampleApp.Services.TempConvertSoap>, SampleApp.Services.TempConvertSoap {
        
        private BeginOperationDelegate onBeginCelsiusToFahrenheitDelegate;
        
        private EndOperationDelegate onEndCelsiusToFahrenheitDelegate;
        
        private System.Threading.SendOrPostCallback onCelsiusToFahrenheitCompletedDelegate;
        
        private BeginOperationDelegate onBeginFahrenheitToCelsiusDelegate;
        
        private EndOperationDelegate onEndFahrenheitToCelsiusDelegate;
        
        private System.Threading.SendOrPostCallback onFahrenheitToCelsiusCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TempConvertSoapClient() {
        }
        
        public TempConvertSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TempConvertSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TempConvertSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TempConvertSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CelsiusToFahrenheitCompletedEventArgs> CelsiusToFahrenheitCompleted;
        
        public event System.EventHandler<FahrenheitToCelsiusCompletedEventArgs> FahrenheitToCelsiusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SampleApp.Services.TempConvertSoap.BeginCelsiusToFahrenheit(SampleApp.Services.CelsiusToFahrenheitRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCelsiusToFahrenheit(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCelsiusToFahrenheit(string celsius, System.AsyncCallback callback, object asyncState) {
            SampleApp.Services.CelsiusToFahrenheitRequest inValue = new SampleApp.Services.CelsiusToFahrenheitRequest();
            inValue.Body = new SampleApp.Services.CelsiusToFahrenheitRequestBody();
            inValue.Body.celsius = celsius;
            return ((SampleApp.Services.TempConvertSoap)(this)).BeginCelsiusToFahrenheit(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SampleApp.Services.CelsiusToFahrenheitResponse SampleApp.Services.TempConvertSoap.EndCelsiusToFahrenheit(System.IAsyncResult result) {
            return base.Channel.EndCelsiusToFahrenheit(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndCelsiusToFahrenheit(System.IAsyncResult result) {
            SampleApp.Services.CelsiusToFahrenheitResponse retVal = ((SampleApp.Services.TempConvertSoap)(this)).EndCelsiusToFahrenheit(result);
            return retVal.Body.CelsiusToFahrenheitResult;
        }
        
        private System.IAsyncResult OnBeginCelsiusToFahrenheit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string celsius = ((string)(inValues[0]));
            return this.BeginCelsiusToFahrenheit(celsius, callback, asyncState);
        }
        
        private object[] OnEndCelsiusToFahrenheit(System.IAsyncResult result) {
            string retVal = this.EndCelsiusToFahrenheit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCelsiusToFahrenheitCompleted(object state) {
            if ((this.CelsiusToFahrenheitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CelsiusToFahrenheitCompleted(this, new CelsiusToFahrenheitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CelsiusToFahrenheitAsync(string celsius) {
            this.CelsiusToFahrenheitAsync(celsius, null);
        }
        
        public void CelsiusToFahrenheitAsync(string celsius, object userState) {
            if ((this.onBeginCelsiusToFahrenheitDelegate == null)) {
                this.onBeginCelsiusToFahrenheitDelegate = new BeginOperationDelegate(this.OnBeginCelsiusToFahrenheit);
            }
            if ((this.onEndCelsiusToFahrenheitDelegate == null)) {
                this.onEndCelsiusToFahrenheitDelegate = new EndOperationDelegate(this.OnEndCelsiusToFahrenheit);
            }
            if ((this.onCelsiusToFahrenheitCompletedDelegate == null)) {
                this.onCelsiusToFahrenheitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCelsiusToFahrenheitCompleted);
            }
            base.InvokeAsync(this.onBeginCelsiusToFahrenheitDelegate, new object[] {
                        celsius}, this.onEndCelsiusToFahrenheitDelegate, this.onCelsiusToFahrenheitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SampleApp.Services.TempConvertSoap.BeginFahrenheitToCelsius(SampleApp.Services.FahrenheitToCelsiusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFahrenheitToCelsius(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginFahrenheitToCelsius(string fahrenheit, System.AsyncCallback callback, object asyncState) {
            SampleApp.Services.FahrenheitToCelsiusRequest inValue = new SampleApp.Services.FahrenheitToCelsiusRequest();
            inValue.Body = new SampleApp.Services.FahrenheitToCelsiusRequestBody();
            inValue.Body.fahrenheit = fahrenheit;
            return ((SampleApp.Services.TempConvertSoap)(this)).BeginFahrenheitToCelsius(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SampleApp.Services.FahrenheitToCelsiusResponse SampleApp.Services.TempConvertSoap.EndFahrenheitToCelsius(System.IAsyncResult result) {
            return base.Channel.EndFahrenheitToCelsius(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndFahrenheitToCelsius(System.IAsyncResult result) {
            SampleApp.Services.FahrenheitToCelsiusResponse retVal = ((SampleApp.Services.TempConvertSoap)(this)).EndFahrenheitToCelsius(result);
            return retVal.Body.FahrenheitToCelsiusResult;
        }
        
        private System.IAsyncResult OnBeginFahrenheitToCelsius(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fahrenheit = ((string)(inValues[0]));
            return this.BeginFahrenheitToCelsius(fahrenheit, callback, asyncState);
        }
        
        private object[] OnEndFahrenheitToCelsius(System.IAsyncResult result) {
            string retVal = this.EndFahrenheitToCelsius(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFahrenheitToCelsiusCompleted(object state) {
            if ((this.FahrenheitToCelsiusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FahrenheitToCelsiusCompleted(this, new FahrenheitToCelsiusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FahrenheitToCelsiusAsync(string fahrenheit) {
            this.FahrenheitToCelsiusAsync(fahrenheit, null);
        }
        
        public void FahrenheitToCelsiusAsync(string fahrenheit, object userState) {
            if ((this.onBeginFahrenheitToCelsiusDelegate == null)) {
                this.onBeginFahrenheitToCelsiusDelegate = new BeginOperationDelegate(this.OnBeginFahrenheitToCelsius);
            }
            if ((this.onEndFahrenheitToCelsiusDelegate == null)) {
                this.onEndFahrenheitToCelsiusDelegate = new EndOperationDelegate(this.OnEndFahrenheitToCelsius);
            }
            if ((this.onFahrenheitToCelsiusCompletedDelegate == null)) {
                this.onFahrenheitToCelsiusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFahrenheitToCelsiusCompleted);
            }
            base.InvokeAsync(this.onBeginFahrenheitToCelsiusDelegate, new object[] {
                        fahrenheit}, this.onEndFahrenheitToCelsiusDelegate, this.onFahrenheitToCelsiusCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SampleApp.Services.TempConvertSoap CreateChannel() {
            return new TempConvertSoapClientChannel(this);
        }
        
        private class TempConvertSoapClientChannel : ChannelBase<SampleApp.Services.TempConvertSoap>, SampleApp.Services.TempConvertSoap {
            
            public TempConvertSoapClientChannel(System.ServiceModel.ClientBase<SampleApp.Services.TempConvertSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCelsiusToFahrenheit(SampleApp.Services.CelsiusToFahrenheitRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CelsiusToFahrenheit", _args, callback, asyncState);
                return _result;
            }
            
            public SampleApp.Services.CelsiusToFahrenheitResponse EndCelsiusToFahrenheit(System.IAsyncResult result) {
                object[] _args = new object[0];
                SampleApp.Services.CelsiusToFahrenheitResponse _result = ((SampleApp.Services.CelsiusToFahrenheitResponse)(base.EndInvoke("CelsiusToFahrenheit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFahrenheitToCelsius(SampleApp.Services.FahrenheitToCelsiusRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("FahrenheitToCelsius", _args, callback, asyncState);
                return _result;
            }
            
            public SampleApp.Services.FahrenheitToCelsiusResponse EndFahrenheitToCelsius(System.IAsyncResult result) {
                object[] _args = new object[0];
                SampleApp.Services.FahrenheitToCelsiusResponse _result = ((SampleApp.Services.FahrenheitToCelsiusResponse)(base.EndInvoke("FahrenheitToCelsius", _args, result)));
                return _result;
            }
        }
    }
}
